<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- <mapper>로 DAO 연결 -->
<mapper namespace="com.ezen.test.repository.BoardDAO">
 
 	<!-- DB연결 -->
 	<!-- parameterType 생략가능 -->
 	<insert id="insert" parameterType="com.ezen.test.domain.BoardVO">
 		insert into board(title, writer, content) values(#{title}, #{writer}, #{content})
 	</insert>
 	
 	<select id="getList" resultType="com.ezen.test.domain.BoardVO">
 		select * from board where isDel='N'
 		<include refid="search"></include> 
 		order by bno desc limit #{pageStart}, #{qty}
 	</select>
 	
 	<select id="getDetail" resultType="com.ezen.test.domain.BoardVO">
 		select * from board where bno=#{bno}
 	</select>
 
 	<update id="update">
 		update board set title=#{title}, content=#{content}, read_count=read_count-2 where bno=#{bno}
 	</update>
 	
 	<update id="remove">
 		update board set isDel='Y' where bno=#{bno}
 	</update>
 	
 	<update id="updateReadCount">
 		update board set read_count = read_count+1 where bno=#{bno}
 	</update>
 	
 	<select id="getTotalCount" resultType="int">
  		select count(bno) from board where isDel='N'
  		<include refid="search"></include>
  	</select>
 
 
	<!-- file 저장처리를 위해 bno를 검색해 가져오는 구문 -->
 	<select id="selectBno" resultType="int">
 		select max(bno) from board
 	</select>
 
 
 	<update id="cmtqty">
 		update board set cmt_qty=(select count(bno) from comment where bno=#{bno}) where bno=#{bno}
 	</update>
 
<!--  	<select id="cmtqty" resultType="com.ezen.test.domain.BoardVO">
 		select count(uuid) from file where bno=#{bno} 
 	</select> -->
 
 
 	<!-- select * from board where isDel='N' and title like %keyword% or content like %keyword% -->
 	<!-- select * from board where isDel='N' and (... or ... or ...) -->
	<sql id="search">
		<if test="type != null">
			<trim prefix="and (" suffix=")" suffixOverrides="or">
				<foreach collection="typeToArray" item="type">
					<trim suffix="or">
						<choose>
							<when test="type == 't'.toString()">
								title like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'w'.toString()">
								writer like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'c'.toString()">
								content like concat('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql> 
 
 
 
 
 
 
 
 
 
 
 
 
</mapper>




