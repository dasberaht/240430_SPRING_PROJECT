package com.ezen.test.handler;

import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.ezen.test.domain.FileVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class FileHandler {

	// 실제 파일이 저장되는 경로
	private final String UP_DIR = "D:\\W\\Spring\\_myProject\\_java\\_fileUpload";
	
	public List<FileVO> uploadFiles(MultipartFile[] files) {
		// return 객체 생성(직접 생성할 경우, arraylist로 생성)
		List<FileVO> flist = new ArrayList<FileVO>();
				
		// MultipartFile[]을 받아, FileVO 형태의 List로 생성 후 리턴
		// 오늘 날짜로 경로생성(가변형태로 저장) : "년월일" 폴더를 구성
		
		// 오늘 날짜의 경로
		LocalDate date = LocalDate.now();
		String today = date.toString();
		log.info("> FileHandler today {}", today);
		// 오늘 날짜를 폴더로 구성
		today = today.replace("-", File.separator);
		// ex) D:\\W\\Spring\\_myProject\\_java\\_fileUpload\\2024\\04\\29
		File folders = new File(UP_DIR, today);
		// 폴더가 없으면 생성
		// 폴더 생성 > mkdir (폴더 1개 생성), mkdirs(경로의 하위 폴더까지 구조로 생성; 여러개를 생성)
		// exists : 있는지 없는지 확인하는 속성
		if(!folders.exists()) {
			folders.mkdirs();	// 폴더 생성 명령
		}
		
		
		return flist;
	}

}
